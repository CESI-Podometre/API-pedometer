// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StarFitApi.Models;

#nullable disable

namespace StarFitApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240313084822_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("StarFitApi.Models.Database.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_date");

                    b.Property<string>("IllustrationPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("illustration_path");

                    b.Property<bool>("Published")
                        .HasColumnType("boolean")
                        .HasColumnName("published");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dcc02c20-67b6-4d35-b9a8-42d9e359ad33"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8980),
                            Description = "Content 0",
                            IllustrationPath = "https://media.istockphoto.com/id/182060276/photo/casual-man-gesturing-thumbs-up-isolated.jpg?s=612x612&w=0&k=20&c=YYCr9xSywy1pxJRskxEPYuM8T0PYTX3ylFG0C1pXyd4=",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8980),
                            Title = "Article 0",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8980)
                        },
                        new
                        {
                            Id = new Guid("db87c4ca-6d61-41cc-afea-e2c07b008c46"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8990),
                            Description = "Content 1",
                            IllustrationPath = "https://thumbs.dreamstime.com/b/bald-man-thumbs-up-26364248.jpg",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8990),
                            Title = "Article 1",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8990)
                        },
                        new
                        {
                            Id = new Guid("a29cf351-52cc-4a5e-99a5-8cd9dddecc58"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9000),
                            Description = "Content 2",
                            IllustrationPath = "https://previews.123rf.com/images/ambro/ambro1112/ambro111200418/11558816-businessman-with-thumbs-up.jpg",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9000),
                            Title = "Article 2",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9000)
                        },
                        new
                        {
                            Id = new Guid("1c8715f1-f38b-49b8-be38-5890ab8c0998"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9010),
                            Description = "Content 3",
                            IllustrationPath = "https://media.istockphoto.com/id/182060276/photo/casual-man-gesturing-thumbs-up-isolated.jpg?s=612x612&w=0&k=20&c=YYCr9xSywy1pxJRskxEPYuM8T0PYTX3ylFG0C1pXyd4=",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9010),
                            Title = "Article 3",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9010)
                        },
                        new
                        {
                            Id = new Guid("4e6bac1c-a423-41ec-90d1-5012f9e83508"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9020),
                            Description = "Content 4",
                            IllustrationPath = "https://thumbs.dreamstime.com/b/bald-man-thumbs-up-26364248.jpg",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9020),
                            Title = "Article 4",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9020)
                        },
                        new
                        {
                            Id = new Guid("577d8b53-95b1-40a1-a011-c83808360bbd"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9030),
                            Description = "Content 5",
                            IllustrationPath = "https://previews.123rf.com/images/ambro/ambro1112/ambro111200418/11558816-businessman-with-thumbs-up.jpg",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9030),
                            Title = "Article 5",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9030)
                        },
                        new
                        {
                            Id = new Guid("bf18ae5f-ef0b-4bb2-bae6-fb144528832f"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9040),
                            Description = "Content 6",
                            IllustrationPath = "https://media.istockphoto.com/id/182060276/photo/casual-man-gesturing-thumbs-up-isolated.jpg?s=612x612&w=0&k=20&c=YYCr9xSywy1pxJRskxEPYuM8T0PYTX3ylFG0C1pXyd4=",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9040),
                            Title = "Article 6",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9040)
                        },
                        new
                        {
                            Id = new Guid("f0b6609b-2f1d-41b3-bd50-8f7d66d33733"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9050),
                            Description = "Content 7",
                            IllustrationPath = "https://thumbs.dreamstime.com/b/bald-man-thumbs-up-26364248.jpg",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9050),
                            Title = "Article 7",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9050)
                        },
                        new
                        {
                            Id = new Guid("2e944d91-a2a3-4e5d-a682-3ab2233ab000"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9060),
                            Description = "Content 8",
                            IllustrationPath = "https://previews.123rf.com/images/ambro/ambro1112/ambro111200418/11558816-businessman-with-thumbs-up.jpg",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9060),
                            Title = "Article 8",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9060)
                        },
                        new
                        {
                            Id = new Guid("11f93bcb-b527-4cd2-85cc-17e1021a2c63"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9070),
                            Description = "Content 9",
                            IllustrationPath = "https://media.istockphoto.com/id/182060276/photo/casual-man-gesturing-thumbs-up-isolated.jpg?s=612x612&w=0&k=20&c=YYCr9xSywy1pxJRskxEPYuM8T0PYTX3ylFG0C1pXyd4=",
                            Published = true,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9070),
                            Title = "Article 9",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9070)
                        });
                });

            modelBuilder.Entity("StarFitApi.Models.Database.Badge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<string>("IconPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("icon_path");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Badges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1adc6f90-de96-4373-8342-088458e19c5e"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8680),
                            Description = "Content 0",
                            IconPath = "https://png.pngtree.com/png-vector/20201229/ourmid/pngtree-a-squatting-tabby-cat-png-image_2664942.jpg",
                            Title = "Badge 0",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8690)
                        },
                        new
                        {
                            Id = new Guid("0c56fc63-1e71-4d26-8e87-64ab7f116096"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8690),
                            Description = "Content 1",
                            IconPath = "https://images.rawpixel.com/image_png_800/czNmcy1wcml2YXRlL3Jhd3BpeGVsX2ltYWdlcy93ZWJzaXRlX2NvbnRlbnQvcHUyMzMxNjM5LWltYWdlXzItbDBqOXFvd3IucG5n.png",
                            Title = "Badge 1",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8700)
                        },
                        new
                        {
                            Id = new Guid("e6d56383-0936-4e04-a231-02edf182dada"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8700),
                            Description = "Content 2",
                            IconPath = "https://pngimg.com/uploads/cat/cat_PNG50447.png",
                            Title = "Badge 2",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8700)
                        },
                        new
                        {
                            Id = new Guid("8b536785-8986-41ed-a5fb-a1dae88837c3"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8710),
                            Description = "Content 3",
                            IconPath = "https://png.pngtree.com/png-vector/20201229/ourmid/pngtree-a-squatting-tabby-cat-png-image_2664942.jpg",
                            Title = "Badge 3",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8710)
                        },
                        new
                        {
                            Id = new Guid("49bf3828-d339-4f20-9c33-48eceac85428"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8720),
                            Description = "Content 4",
                            IconPath = "https://images.rawpixel.com/image_png_800/czNmcy1wcml2YXRlL3Jhd3BpeGVsX2ltYWdlcy93ZWJzaXRlX2NvbnRlbnQvcHUyMzMxNjM5LWltYWdlXzItbDBqOXFvd3IucG5n.png",
                            Title = "Badge 4",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8720)
                        },
                        new
                        {
                            Id = new Guid("cf3a156f-9cf2-42c3-8ea7-f1d092fe52b2"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8730),
                            Description = "Content 5",
                            IconPath = "https://pngimg.com/uploads/cat/cat_PNG50447.png",
                            Title = "Badge 5",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8730)
                        },
                        new
                        {
                            Id = new Guid("bd8ceb2a-3f75-4a06-8df6-25385262a455"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8740),
                            Description = "Content 6",
                            IconPath = "https://png.pngtree.com/png-vector/20201229/ourmid/pngtree-a-squatting-tabby-cat-png-image_2664942.jpg",
                            Title = "Badge 6",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8740)
                        },
                        new
                        {
                            Id = new Guid("0512e283-6301-4b6b-87e4-0871d3346911"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8750),
                            Description = "Content 7",
                            IconPath = "https://images.rawpixel.com/image_png_800/czNmcy1wcml2YXRlL3Jhd3BpeGVsX2ltYWdlcy93ZWJzaXRlX2NvbnRlbnQvcHUyMzMxNjM5LWltYWdlXzItbDBqOXFvd3IucG5n.png",
                            Title = "Badge 7",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8750)
                        },
                        new
                        {
                            Id = new Guid("d3f8bdbd-ab89-40cd-9724-6b12043e512a"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8760),
                            Description = "Content 8",
                            IconPath = "https://pngimg.com/uploads/cat/cat_PNG50447.png",
                            Title = "Badge 8",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8760)
                        },
                        new
                        {
                            Id = new Guid("fb286aa1-972d-4b8d-84e1-281c54f73fcf"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8770),
                            Description = "Content 9",
                            IconPath = "https://png.pngtree.com/png-vector/20201229/ourmid/pngtree-a-squatting-tabby-cat-png-image_2664942.jpg",
                            Title = "Badge 9",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8770)
                        });
                });

            modelBuilder.Entity("StarFitApi.Models.Database.BadgesToUser", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<Guid>("BadgeId")
                        .HasColumnType("uuid")
                        .HasColumnName("badge_id");

                    b.Property<DateTime>("ObtainedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("obtained_at");

                    b.HasKey("UserId", "BadgeId");

                    b.HasIndex("BadgeId");

                    b.ToTable("BadgesToUser");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            BadgeId = new Guid("1adc6f90-de96-4373-8342-088458e19c5e"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9280)
                        },
                        new
                        {
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            BadgeId = new Guid("0c56fc63-1e71-4d26-8e87-64ab7f116096"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9290)
                        },
                        new
                        {
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            BadgeId = new Guid("e6d56383-0936-4e04-a231-02edf182dada"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9290)
                        },
                        new
                        {
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            BadgeId = new Guid("8b536785-8986-41ed-a5fb-a1dae88837c3"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9290)
                        },
                        new
                        {
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            BadgeId = new Guid("49bf3828-d339-4f20-9c33-48eceac85428"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9290)
                        },
                        new
                        {
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            BadgeId = new Guid("cf3a156f-9cf2-42c3-8ea7-f1d092fe52b2"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9290)
                        },
                        new
                        {
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            BadgeId = new Guid("bd8ceb2a-3f75-4a06-8df6-25385262a455"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9290)
                        },
                        new
                        {
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            BadgeId = new Guid("0512e283-6301-4b6b-87e4-0871d3346911"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9290)
                        },
                        new
                        {
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            BadgeId = new Guid("d3f8bdbd-ab89-40cd-9724-6b12043e512a"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9290)
                        },
                        new
                        {
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            BadgeId = new Guid("fb286aa1-972d-4b8d-84e1-281c54f73fcf"),
                            ObtainedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9300)
                        });
                });

            modelBuilder.Entity("StarFitApi.Models.Database.Challenge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("BadgeId")
                        .HasColumnType("uuid")
                        .HasColumnName("badge_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("end_date");

                    b.Property<bool>("IsGlobal")
                        .HasColumnType("boolean")
                        .HasColumnName("is_global");

                    b.Property<int>("Objective")
                        .HasColumnType("integer")
                        .HasColumnName("objective");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("start_date");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("BadgeId");

                    b.ToTable("Challenges");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3620b92-dd1d-43e9-a3aa-4f8a67d61b9a"),
                            BadgeId = new Guid("1adc6f90-de96-4373-8342-088458e19c5e"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8830),
                            Description = "Content 0",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8820),
                            IsGlobal = true,
                            Objective = 85228,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8820),
                            Title = "Challenge 0",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8830)
                        },
                        new
                        {
                            Id = new Guid("4ad0f05d-7f92-40b8-964d-8410718d0f00"),
                            BadgeId = new Guid("0c56fc63-1e71-4d26-8e87-64ab7f116096"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8850),
                            Description = "Content 1",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8840),
                            IsGlobal = false,
                            Objective = 94311,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8840),
                            Title = "Challenge 1",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8850)
                        },
                        new
                        {
                            Id = new Guid("f897c061-60cc-45b8-8845-18dbbc4c040a"),
                            BadgeId = new Guid("e6d56383-0936-4e04-a231-02edf182dada"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8860),
                            Description = "Content 2",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8860),
                            IsGlobal = true,
                            Objective = 12246,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8860),
                            Title = "Challenge 2",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8860)
                        },
                        new
                        {
                            Id = new Guid("bae37000-6739-4937-9af4-674cfc2f33c1"),
                            BadgeId = new Guid("8b536785-8986-41ed-a5fb-a1dae88837c3"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8870),
                            Description = "Content 3",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8870),
                            IsGlobal = false,
                            Objective = 98278,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8870),
                            Title = "Challenge 3",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8870)
                        },
                        new
                        {
                            Id = new Guid("34e729dd-0d77-4611-9f96-acf0b7287caa"),
                            BadgeId = new Guid("49bf3828-d339-4f20-9c33-48eceac85428"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8890),
                            Description = "Content 4",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8880),
                            IsGlobal = true,
                            Objective = 15809,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8880),
                            Title = "Challenge 4",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8890)
                        },
                        new
                        {
                            Id = new Guid("a80f6d6b-bb43-48c8-861c-a9137329dbbd"),
                            BadgeId = new Guid("cf3a156f-9cf2-42c3-8ea7-f1d092fe52b2"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8900),
                            Description = "Content 5",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8900),
                            IsGlobal = false,
                            Objective = 85061,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8900),
                            Title = "Challenge 5",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8900)
                        },
                        new
                        {
                            Id = new Guid("a2cd6e40-443d-4c10-9a49-eed2c325e092"),
                            BadgeId = new Guid("bd8ceb2a-3f75-4a06-8df6-25385262a455"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8910),
                            Description = "Content 6",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8910),
                            IsGlobal = true,
                            Objective = 65913,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8910),
                            Title = "Challenge 6",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8910)
                        },
                        new
                        {
                            Id = new Guid("fc6dbfbf-4274-4421-b5d8-6f71d381ef1c"),
                            BadgeId = new Guid("0512e283-6301-4b6b-87e4-0871d3346911"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8930),
                            Description = "Content 7",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8920),
                            IsGlobal = false,
                            Objective = 83530,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8920),
                            Title = "Challenge 7",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8930)
                        },
                        new
                        {
                            Id = new Guid("4a4704a3-1b91-4993-882f-b829de47ad9b"),
                            BadgeId = new Guid("d3f8bdbd-ab89-40cd-9724-6b12043e512a"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8940),
                            Description = "Content 8",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8940),
                            IsGlobal = true,
                            Objective = 43218,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8940),
                            Title = "Challenge 8",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8940)
                        },
                        new
                        {
                            Id = new Guid("4b74ebaf-b5aa-484b-8eb6-8261efd41a01"),
                            BadgeId = new Guid("fb286aa1-972d-4b8d-84e1-281c54f73fcf"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8950),
                            Description = "Content 9",
                            EndDate = new DateTime(2024, 4, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8950),
                            IsGlobal = false,
                            Objective = 38619,
                            StartDate = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8950),
                            Title = "Challenge 9",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8950)
                        });
                });

            modelBuilder.Entity("StarFitApi.Models.Database.DayOfWalk", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("date");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.Property<int>("Steps")
                        .HasColumnType("integer")
                        .HasColumnName("steps");

                    b.HasKey("Date", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("DayOfWalk");

                    b.HasData(
                        new
                        {
                            Date = new DateTime(2023, 12, 4, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9090),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 5, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9090),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 6, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9090),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 7, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9100),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 8, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9100),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 9, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9100),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 10, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9100),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 11, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9100),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9120),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9120),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 14, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9120),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 15, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9120),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 16, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9130),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 17, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9130),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 18, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9130),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 19, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9130),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 20, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9130),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 21, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9130),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 22, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9130),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 23, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9140),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 24, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9140),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 25, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9140),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 26, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9140),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 27, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9140),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 28, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9140),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 29, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9140),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 30, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9140),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2023, 12, 31, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9140),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 1, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9150),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 2, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9150),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 3, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9150),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 4, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9150),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 5, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9150),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 6, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9150),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 7, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9150),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 8, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9150),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 9, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9160),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 10, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9160),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 11, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9160),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9160),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9160),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 14, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9160),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 15, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9160),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 16, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9160),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 17, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9160),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 18, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9170),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 19, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9170),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 20, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9170),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 21, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9170),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 22, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9170),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 23, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9170),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 24, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9170),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 25, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9170),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 26, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9180),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 27, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9180),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 28, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9180),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 29, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9180),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 30, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9180),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 1, 31, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9180),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 1, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9180),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 2, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9180),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 3, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9180),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 4, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9190),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 5, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9190),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 6, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9190),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 7, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9190),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 8, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9190),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 9, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9190),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 10, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9190),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 11, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9190),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9200),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9200),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 14, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9200),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 15, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9200),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 16, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9200),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 17, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9200),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 18, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9200),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 19, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9200),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 20, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9210),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 21, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9210),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 22, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9210),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 23, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9210),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 24, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9210),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 25, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9210),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 26, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9210),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 27, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9210),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 28, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9210),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 2, 29, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9220),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 1, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9220),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 2, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9220),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 3, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9220),
                            UserId = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 4, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9220),
                            UserId = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 5, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9220),
                            UserId = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 6, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9220),
                            UserId = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 7, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9220),
                            UserId = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 8, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9230),
                            UserId = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 9, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9230),
                            UserId = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 10, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9230),
                            UserId = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 11, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9230),
                            UserId = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            Steps = 1000
                        },
                        new
                        {
                            Date = new DateTime(2024, 3, 12, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(9230),
                            UserId = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            Steps = 1000
                        });
                });

            modelBuilder.Entity("StarFitApi.Models.Database.SuperUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)")
                        .HasColumnName("password");

                    b.Property<string>("SuperRole")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("super_role");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("username");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("SuperUsers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5765917-b495-4d0a-a2f7-eb56522036fd"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 576, DateTimeKind.Local).AddTicks(3080),
                            Password = "$2a$05$CxlBQY4vhezUmKw5lHfsPeU42TDx9OtNyyTYVOevsf7dRz8Yn8Zn6",
                            SuperRole = "superAdmin",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 576, DateTimeKind.Local).AddTicks(3090),
                            Username = "superAdmin"
                        });
                });

            modelBuilder.Entity("StarFitApi.Models.Database.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("identifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8a8c0e5-9ac7-428c-85c9-fcdcf140b2d4"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8480),
                            Identifier = "user0",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8520)
                        },
                        new
                        {
                            Id = new Guid("5d9e78bd-4a17-4174-a984-26c58055841b"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8530),
                            Identifier = "user1",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8530)
                        },
                        new
                        {
                            Id = new Guid("134c376e-033c-452b-abbd-d54a8ed44f54"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8540),
                            Identifier = "user2",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8540)
                        },
                        new
                        {
                            Id = new Guid("4f9ac3bc-3db4-4021-8a6b-32c4b54327c5"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8550),
                            Identifier = "user3",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8550)
                        },
                        new
                        {
                            Id = new Guid("80d19d46-a0ce-4a75-8700-b2ab68eeaaad"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8560),
                            Identifier = "user4",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8560)
                        },
                        new
                        {
                            Id = new Guid("662cad55-6988-4ef3-a150-624f02d73106"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8570),
                            Identifier = "user5",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8570)
                        },
                        new
                        {
                            Id = new Guid("8331472e-f25d-4dbc-859a-76da9a5bf793"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8570),
                            Identifier = "user6",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8580)
                        },
                        new
                        {
                            Id = new Guid("fb7c0e1f-2df1-44b9-b3fb-b955368266c0"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8580),
                            Identifier = "user7",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8580)
                        },
                        new
                        {
                            Id = new Guid("322e9a8f-6008-4971-a401-fb04501cb095"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8590),
                            Identifier = "user8",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8590)
                        },
                        new
                        {
                            Id = new Guid("11dd1bc2-363d-4e68-9bef-46af226bbf46"),
                            CreatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8600),
                            Identifier = "user9",
                            UpdatedAt = new DateTime(2024, 3, 13, 9, 48, 22, 572, DateTimeKind.Local).AddTicks(8600)
                        });
                });

            modelBuilder.Entity("StarFitApi.Models.Database.Badge", b =>
                {
                    b.HasOne("StarFitApi.Models.Database.User", null)
                        .WithMany("Badges")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("StarFitApi.Models.Database.BadgesToUser", b =>
                {
                    b.HasOne("StarFitApi.Models.Database.Badge", "Badge")
                        .WithMany()
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StarFitApi.Models.Database.User", "User")
                        .WithMany("BadgesToUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Badge");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarFitApi.Models.Database.Challenge", b =>
                {
                    b.HasOne("StarFitApi.Models.Database.Badge", "Badge")
                        .WithMany("Challenges")
                        .HasForeignKey("BadgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Badge");
                });

            modelBuilder.Entity("StarFitApi.Models.Database.DayOfWalk", b =>
                {
                    b.HasOne("StarFitApi.Models.Database.User", "User")
                        .WithMany("DaysOfWalk")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("StarFitApi.Models.Database.Badge", b =>
                {
                    b.Navigation("Challenges");
                });

            modelBuilder.Entity("StarFitApi.Models.Database.User", b =>
                {
                    b.Navigation("Badges");

                    b.Navigation("BadgesToUsers");

                    b.Navigation("DaysOfWalk");
                });
#pragma warning restore 612, 618
        }
    }
}
